<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="map_file" default="$(find turtlebot_controller)/rotatedMap.yaml"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot_controller)/Labyrinth-Abschlusspaesentationworld.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)"/>
  </include>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_controller)/rviz_map.rviz"/>

  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" /> 

  <node name="link1_broadcaster" pkg="tf" type="static_transform_publisher" args="0.0 0.0 0.0 0.0 0.0 0.0 map odom 100" />

  <rosparam command="load" file="$(find turtlebot_controller)/config.yaml"/>
  <node name="marker_service" pkg="turtlebot_controller" type="markerService.py" output="screen"/>
  <node name="algorythm_test" pkg="turtlebot_controller" type="new_algorythm" output="screen"/>
  <node name="odom_sub" pkg="turtlebot_controller" type="mover.py" output="screen"/>
</launch>
